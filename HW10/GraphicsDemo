import java.awt.Dimension;
import java.awt.event.MouseEvent;

public class GraphicsDemo extends java.awt.Frame implements java.awt.event.MouseListener, java.awt.event.MouseMotionListener
{
  public static void main(String[] paramArrayOfString)
  {
    new GraphicsDemo();
  }
  
  public GraphicsDemo()
  {
    super("Graphics Demo");
    

    setBackground(java.awt.Color.white);
    

    addMouseListener(this);
    
    addMouseMotionListener(this);
    

    setSize(250, 250);
    

    Dimension localDimension1 = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
    Dimension localDimension2 = getSize();
    
    if (height > height) {
      height = height;
    }
    if (width > width) {
      width = width;
    }
    setLocation((width - width) / 2, (height - height) / 2);
    

    setVisible(true);
    
    addWindowListener(new GraphicsDemo.1(this));
  }
  






  public void paint(java.awt.Graphics paramGraphics)
  {
    java.util.Random localRandom = new java.util.Random();
    
    int i4 = getSizewidth;
    int i5 = getSizeheight;
    
    for (int i6 = 0; i6 < 100; i6++) {
      int i = localRandom.nextInt(9);
      int j = localRandom.nextInt(i4);
      int m = localRandom.nextInt(i5);
      int k = localRandom.nextInt(i4);
      int n = localRandom.nextInt(i5);
      int i1 = localRandom.nextInt(255);
      int i2 = localRandom.nextInt(255);
      int i3 = localRandom.nextInt(255);
      

      paramGraphics.setColor(new java.awt.Color(i1, i2, i3));
      
      switch (i) {
      case 0: 
        paramGraphics.drawLine(j, m, k, n);
        break;
      case 1: 
        paramGraphics.draw3DRect(j, m, k - j, n - m, true);
        break;
      case 2: 
        paramGraphics.drawOval(j, m, k - j, n - m);
        break;
      case 3: 
        paramGraphics.drawRect(j, m, k - j, n - m);
        break;
      case 4: 
        paramGraphics.drawRoundRect(j, m, k - j, n - m, 10, 10);
        break;
      case 5: 
        paramGraphics.fill3DRect(j, m, k - j, n - m, true);
        break;
      case 6: 
        paramGraphics.fillOval(j, m, k - j, n - m);
        break;
      case 7: 
        paramGraphics.fillRect(j, m, k - j, n - m);
        break;
      case 8: 
        paramGraphics.fillRoundRect(j, m, k - j, n - m, 10, 10);
      }
      
    }
  }
  




  public void mouseClicked(MouseEvent paramMouseEvent) { repaint(); }
  
  public void mouseEntered(MouseEvent paramMouseEvent) {}
  
  public void mouseExited(MouseEvent paramMouseEvent) {}
  
  public void mousePressed(MouseEvent paramMouseEvent) {}
  public void mouseReleased(MouseEvent paramMouseEvent) {}
  public void mouseMoved(MouseEvent paramMouseEvent) { repaint(); }
  
  public void mouseDragged(MouseEvent paramMouseEvent) {}
}

